
worker_processes 12;
worker_rlimit_nofile 4000;

events {
    use epoll;
    worker_connections 2000;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;


    limit_req_zone $binary_remote_addr zone=rate_limit:10m rate=10r/s;

    upstream backend {
        server app:8000;
        keepalive 10;
    }
    server {
        listen 80;

        error_page 429 = @429;
        location @429 {
            default_type application/json;
            return 429 '{"status": 429, "message": "Too Many Requests"}';
        }
        
        # access_log /logs.log 
        proxy_ignore_client_abort on;
        error_log stderr info;
        # extra headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / { 
            limit_req zone=rate_limit burst=20 nodelay;
            limit_req_status 429;

            proxy_http_version 1.1;
            proxy_set_header   "Connection" "";
            keepalive_timeout 30;
            keepalive_requests 1000;
            proxy_pass http://backend/;
        }
    }
}